{"version":3,"sources":["../node_modules/@material-ui/core/esm/utils/useIsFocusVisible.js","../node_modules/@material-ui/core/esm/styles/makeStyles.js","../node_modules/@material-ui/core/node_modules/react-transition-group/esm/utils/ChildMapping.js","../node_modules/@material-ui/core/node_modules/react-transition-group/esm/TransitionGroup.js","../node_modules/@material-ui/core/esm/ButtonBase/Ripple.js","../node_modules/@material-ui/core/esm/ButtonBase/TouchRipple.js","../node_modules/@material-ui/core/esm/ButtonBase/ButtonBase.js"],"names":["__webpack_require__","d","__webpack_exports__","useIsFocusVisible","react__WEBPACK_IMPORTED_MODULE_0__","react_dom__WEBPACK_IMPORTED_MODULE_1__","hadKeyboardEvent","hadFocusVisibleRecently","hadFocusVisibleRecentlyTimeout","inputTypesWhitelist","text","search","url","tel","email","password","number","date","month","week","time","datetime","datetime-local","handleKeyDown","event","metaKey","altKey","ctrlKey","handlePointerDown","handleVisibilityChange","this","visibilityState","isFocusVisible","target","matches","error","node","type","tagName","readOnly","isContentEditable","focusTriggersKeyboardModality","handleBlurVisible","window","clearTimeout","setTimeout","onBlurVisible","ref","instance","doc","ownerDocument","addEventListener","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_material_ui_styles__WEBPACK_IMPORTED_MODULE_1__","_defaultTheme__WEBPACK_IMPORTED_MODULE_2__","stylesOrCreator","options","arguments","length","undefined","Object","defaultTheme","getChildMapping","children","mapFn","result","create","react","map","c","forEach","child","key","mapper","getProp","prop","props","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","prev","next","getValueForKey","i","nextKeysPending","pendingKeys","prevKey","push","childMapping","nextKey","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","in","bind","exit","enter","values","obj","k","TransitionGroup_TransitionGroup","_React$Component","TransitionGroup","context","_this","handleExited","call","assertThisInitialized","state","contextValue","isMounting","firstRender","inheritsLoose","_proto","prototype","componentDidMount","mounted","setState","componentWillUnmount","getDerivedStateFromProps","_ref","appear","currentChildMapping","esm_extends","render","_this$props","Component","component","childFactory","objectWithoutPropertiesLoose","react_default","a","createElement","TransitionGroupContext","Provider","value","propTypes","defaultProps","esm_TransitionGroup","useEnhancedEffect","ButtonBase_Ripple","classes","_props$pulsate","pulsate","rippleX","rippleY","rippleSize","inProp","_props$onExited","timeout","_React$useState","leaving","setLeaving","rippleClassName","clsx_m","ripple","rippleVisible","ripplePulsate","rippleStyles","width","height","top","left","childClassName","childLeaving","childPulsate","useEventCallback","timeoutId","className","style","TouchRipple_TouchRipple","_props$center","center","centerProp","other","objectWithoutProperties","ripples","setRipples","rippleCallback","current","ignoringMouseDown","startTimer","startTimerCommit","container","startCommit","params","cb","oldRipples","concat","toConsumableArray","start","_options$pulsate","_options$center","_options$fakeElement","fakeElement","element","rect","getBoundingClientRect","clientX","clientY","touches","Math","round","sqrt","pow","sizeX","max","abs","clientWidth","sizeY","clientHeight","stop","persist","slice","root","ButtonBase_TouchRipple","withStyles","theme","overflow","pointerEvents","position","zIndex","right","bottom","borderRadius","opacity","transform","animation","transitions","easing","easeInOut","animationDuration","duration","shorter","display","backgroundColor","@keyframes enter","0%","100%","@keyframes exit","@keyframes pulsate","50%","flip","name","ButtonBase_ButtonBase","action","buttonRefProp","buttonRef","_props$centerRipple","centerRipple","_props$component","_props$disabled","disabled","_props$disableRipple","disableRipple","_props$disableTouchRi","disableTouchRipple","_props$focusRipple","focusRipple","focusVisibleClassName","onBlur","onClick","onFocus","onFocusVisible","onKeyDown","onKeyUp","onMouseDown","onMouseLeave","onMouseUp","onTouchEnd","onTouchMove","onTouchStart","onDragLeave","_props$tabIndex","tabIndex","TouchRippleProps","_props$type","rippleRef","focusVisible","setFocusVisible","_useIsFocusVisible","focusVisibleRef","useRippleHandler","rippleAction","eventCallback","skipRippleAction","focus","handleMouseDown","handleDragLeave","handleMouseUp","handleMouseLeave","preventDefault","handleTouchStart","handleTouchEnd","handleTouchMove","handleBlur","handleFocus","currentTarget","isNonNativeButton","button","react_dom","href","keydownRef","handleKeyUp","defaultPrevented","ComponentProp","buttonProps","role","handleUserRef","useForkRef","handleOwnRef","handleRef","_React$useState2","mountedState","setMountedState","enableTouchRipple","alignItems","justifyContent","WebkitTapHighlightColor","outline","border","margin","padding","cursor","userSelect","verticalAlign","-moz-appearance","-webkit-appearance","textDecoration","color","&::-moz-focus-inner","borderStyle","&$disabled"],"mappings":"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","file":"static/js/7.e38c7c7c.chunk.js","sourcesContent":["// based on https://github.com/WICG/focus-visible/blob/v4.1.5/src/focus-visible.js\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nvar hadKeyboardEvent = true;\nvar hadFocusVisibleRecently = false;\nvar hadFocusVisibleRecentlyTimeout = null;\nvar inputTypesWhitelist = {\n  text: true,\n  search: true,\n  url: true,\n  tel: true,\n  email: true,\n  password: true,\n  number: true,\n  date: true,\n  month: true,\n  week: true,\n  time: true,\n  datetime: true,\n  'datetime-local': true\n};\n/**\n * Computes whether the given element should automatically trigger the\n * `focus-visible` class being added, i.e. whether it should always match\n * `:focus-visible` when focused.\n * @param {Element} node\n * @return {boolean}\n */\n\nfunction focusTriggersKeyboardModality(node) {\n  var type = node.type,\n      tagName = node.tagName;\n\n  if (tagName === 'INPUT' && inputTypesWhitelist[type] && !node.readOnly) {\n    return true;\n  }\n\n  if (tagName === 'TEXTAREA' && !node.readOnly) {\n    return true;\n  }\n\n  if (node.isContentEditable) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * Keep track of our keyboard modality state with `hadKeyboardEvent`.\n * If the most recent user interaction was via the keyboard;\n * and the key press did not include a meta, alt/option, or control key;\n * then the modality is keyboard. Otherwise, the modality is not keyboard.\n * @param {KeyboardEvent} event\n */\n\n\nfunction handleKeyDown(event) {\n  if (event.metaKey || event.altKey || event.ctrlKey) {\n    return;\n  }\n\n  hadKeyboardEvent = true;\n}\n/**\n * If at any point a user clicks with a pointing device, ensure that we change\n * the modality away from keyboard.\n * This avoids the situation where a user presses a key on an already focused\n * element, and then clicks on a different element, focusing it with a\n * pointing device, while we still think we're in keyboard modality.\n */\n\n\nfunction handlePointerDown() {\n  hadKeyboardEvent = false;\n}\n\nfunction handleVisibilityChange() {\n  if (this.visibilityState === 'hidden') {\n    // If the tab becomes active again, the browser will handle calling focus\n    // on the element (Safari actually calls it twice).\n    // If this tab change caused a blur on an element with focus-visible,\n    // re-apply the class when the user switches back to the tab.\n    if (hadFocusVisibleRecently) {\n      hadKeyboardEvent = true;\n    }\n  }\n}\n\nfunction prepare(doc) {\n  doc.addEventListener('keydown', handleKeyDown, true);\n  doc.addEventListener('mousedown', handlePointerDown, true);\n  doc.addEventListener('pointerdown', handlePointerDown, true);\n  doc.addEventListener('touchstart', handlePointerDown, true);\n  doc.addEventListener('visibilitychange', handleVisibilityChange, true);\n}\n\nexport function teardown(doc) {\n  doc.removeEventListener('keydown', handleKeyDown, true);\n  doc.removeEventListener('mousedown', handlePointerDown, true);\n  doc.removeEventListener('pointerdown', handlePointerDown, true);\n  doc.removeEventListener('touchstart', handlePointerDown, true);\n  doc.removeEventListener('visibilitychange', handleVisibilityChange, true);\n}\n\nfunction isFocusVisible(event) {\n  var target = event.target;\n\n  try {\n    return target.matches(':focus-visible');\n  } catch (error) {} // browsers not implementing :focus-visible will throw a SyntaxError\n  // we use our own heuristic for those browsers\n  // rethrow might be better if it's not the expected error but do we really\n  // want to crash if focus-visible malfunctioned?\n  // no need for validFocusTarget check. the user does that by attaching it to\n  // focusable events only\n\n\n  return hadKeyboardEvent || focusTriggersKeyboardModality(target);\n}\n/**\n * Should be called if a blur event is fired on a focus-visible element\n */\n\n\nfunction handleBlurVisible() {\n  // To detect a tab/window switch, we look for a blur event followed\n  // rapidly by a visibility change.\n  // If we don't see a visibility change within 100ms, it's probably a\n  // regular focus change.\n  hadFocusVisibleRecently = true;\n  window.clearTimeout(hadFocusVisibleRecentlyTimeout);\n  hadFocusVisibleRecentlyTimeout = window.setTimeout(function () {\n    hadFocusVisibleRecently = false;\n  }, 100);\n}\n\nexport default function useIsFocusVisible() {\n  var ref = React.useCallback(function (instance) {\n    var node = ReactDOM.findDOMNode(instance);\n\n    if (node != null) {\n      prepare(node.ownerDocument);\n    }\n  }, []);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(isFocusVisible);\n  }\n\n  return {\n    isFocusVisible: isFocusVisible,\n    onBlurVisible: handleBlurVisible,\n    ref: ref\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = key in prevChildMapping;\n    var hasNext = key in nextChildMapping;\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return (\n        /*#__PURE__*/\n        React.createElement(TransitionGroupContext.Provider, {\n          value: contextValue\n        }, children)\n      );\n    }\n\n    return (\n      /*#__PURE__*/\n      React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      },\n      /*#__PURE__*/\n      React.createElement(Component, props, children))\n    );\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport useEventCallback from '../utils/useEventCallback';\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * @ignore - internal component.\n */\n\nfunction Ripple(props) {\n  var classes = props.classes,\n      _props$pulsate = props.pulsate,\n      pulsate = _props$pulsate === void 0 ? false : _props$pulsate,\n      rippleX = props.rippleX,\n      rippleY = props.rippleY,\n      rippleSize = props.rippleSize,\n      inProp = props.in,\n      _props$onExited = props.onExited,\n      onExited = _props$onExited === void 0 ? function () {} : _props$onExited,\n      timeout = props.timeout;\n\n  var _React$useState = React.useState(false),\n      leaving = _React$useState[0],\n      setLeaving = _React$useState[1];\n\n  var rippleClassName = clsx(classes.ripple, classes.rippleVisible, pulsate && classes.ripplePulsate);\n  var rippleStyles = {\n    width: rippleSize,\n    height: rippleSize,\n    top: -(rippleSize / 2) + rippleY,\n    left: -(rippleSize / 2) + rippleX\n  };\n  var childClassName = clsx(classes.child, leaving && classes.childLeaving, pulsate && classes.childPulsate);\n  var handleExited = useEventCallback(onExited); // Ripple is used for user feedback (e.g. click or press) so we want to apply styles with the highest priority\n\n  useEnhancedEffect(function () {\n    if (!inProp) {\n      // react-transition-group#onExit\n      setLeaving(true); // react-transition-group#onExited\n\n      var timeoutId = setTimeout(handleExited, timeout);\n      return function () {\n        clearTimeout(timeoutId);\n      };\n    }\n\n    return undefined;\n  }, [handleExited, inProp, timeout]);\n  return (\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: rippleClassName,\n      style: rippleStyles\n    },\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: childClassName\n    }))\n  );\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Ripple.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.\n   */\n  pulsate: PropTypes.bool,\n\n  /**\n   * Diameter of the ripple.\n   */\n  rippleSize: PropTypes.number,\n\n  /**\n   * Horizontal position of the ripple center.\n   */\n  rippleX: PropTypes.number,\n\n  /**\n   * Vertical position of the ripple center.\n   */\n  rippleY: PropTypes.number,\n\n  /**\n   * exit delay\n   */\n  timeout: PropTypes.number.isRequired\n} : void 0;\nexport default Ripple;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup } from 'react-transition-group';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Ripple from './Ripple';\nvar DURATION = 550;\nexport var DELAY_RIPPLE = 80;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      zIndex: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit'\n    },\n\n    /* Styles applied to the internal `Ripple` components `ripple` class. */\n    ripple: {\n      opacity: 0,\n      position: 'absolute'\n    },\n\n    /* Styles applied to the internal `Ripple` components `rippleVisible` class. */\n    rippleVisible: {\n      opacity: 0.3,\n      transform: 'scale(1)',\n      animation: \"$enter \".concat(DURATION, \"ms \").concat(theme.transitions.easing.easeInOut)\n    },\n\n    /* Styles applied to the internal `Ripple` components `ripplePulsate` class. */\n    ripplePulsate: {\n      animationDuration: \"\".concat(theme.transitions.duration.shorter, \"ms\")\n    },\n\n    /* Styles applied to the internal `Ripple` components `child` class. */\n    child: {\n      opacity: 1,\n      display: 'block',\n      width: '100%',\n      height: '100%',\n      borderRadius: '50%',\n      backgroundColor: 'currentColor'\n    },\n\n    /* Styles applied to the internal `Ripple` components `childLeaving` class. */\n    childLeaving: {\n      opacity: 0,\n      animation: \"$exit \".concat(DURATION, \"ms \").concat(theme.transitions.easing.easeInOut)\n    },\n\n    /* Styles applied to the internal `Ripple` components `childPulsate` class. */\n    childPulsate: {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      animation: \"$pulsate 2500ms \".concat(theme.transitions.easing.easeInOut, \" 200ms infinite\")\n    },\n    '@keyframes enter': {\n      '0%': {\n        transform: 'scale(0)',\n        opacity: 0.1\n      },\n      '100%': {\n        transform: 'scale(1)',\n        opacity: 0.3\n      }\n    },\n    '@keyframes exit': {\n      '0%': {\n        opacity: 1\n      },\n      '100%': {\n        opacity: 0\n      }\n    },\n    '@keyframes pulsate': {\n      '0%': {\n        transform: 'scale(1)'\n      },\n      '50%': {\n        transform: 'scale(0.92)'\n      },\n      '100%': {\n        transform: 'scale(1)'\n      }\n    }\n  };\n};\n/**\n * @ignore - internal component.\n *\n * TODO v5: Make private\n */\n\nvar TouchRipple = React.forwardRef(function TouchRipple(props, ref) {\n  var _props$center = props.center,\n      centerProp = _props$center === void 0 ? false : _props$center,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"center\", \"classes\", \"className\"]);\n\n  var _React$useState = React.useState([]),\n      ripples = _React$useState[0],\n      setRipples = _React$useState[1];\n\n  var nextKey = React.useRef(0);\n  var rippleCallback = React.useRef(null);\n  React.useEffect(function () {\n    if (rippleCallback.current) {\n      rippleCallback.current();\n      rippleCallback.current = null;\n    }\n  }, [ripples]); // Used to filter out mouse emulated events on mobile.\n\n  var ignoringMouseDown = React.useRef(false); // We use a timer in order to only show the ripples for touch \"click\" like events.\n  // We don't want to display the ripple for touch scroll events.\n\n  var startTimer = React.useRef(null); // This is the hook called once the previous timeout is ready.\n\n  var startTimerCommit = React.useRef(null);\n  var container = React.useRef(null);\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(startTimer.current);\n    };\n  }, []);\n  var startCommit = React.useCallback(function (params) {\n    var pulsate = params.pulsate,\n        rippleX = params.rippleX,\n        rippleY = params.rippleY,\n        rippleSize = params.rippleSize,\n        cb = params.cb;\n    setRipples(function (oldRipples) {\n      return [].concat(_toConsumableArray(oldRipples), [\n      /*#__PURE__*/\n      React.createElement(Ripple, {\n        key: nextKey.current,\n        classes: classes,\n        timeout: DURATION,\n        pulsate: pulsate,\n        rippleX: rippleX,\n        rippleY: rippleY,\n        rippleSize: rippleSize\n      })]);\n    });\n    nextKey.current += 1;\n    rippleCallback.current = cb;\n  }, [classes]);\n  var start = React.useCallback(function () {\n    var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var cb = arguments.length > 2 ? arguments[2] : undefined;\n    var _options$pulsate = options.pulsate,\n        pulsate = _options$pulsate === void 0 ? false : _options$pulsate,\n        _options$center = options.center,\n        center = _options$center === void 0 ? centerProp || options.pulsate : _options$center,\n        _options$fakeElement = options.fakeElement,\n        fakeElement = _options$fakeElement === void 0 ? false : _options$fakeElement;\n\n    if (event.type === 'mousedown' && ignoringMouseDown.current) {\n      ignoringMouseDown.current = false;\n      return;\n    }\n\n    if (event.type === 'touchstart') {\n      ignoringMouseDown.current = true;\n    }\n\n    var element = fakeElement ? null : container.current;\n    var rect = element ? element.getBoundingClientRect() : {\n      width: 0,\n      height: 0,\n      left: 0,\n      top: 0\n    }; // Get the size of the ripple\n\n    var rippleX;\n    var rippleY;\n    var rippleSize;\n\n    if (center || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {\n      rippleX = Math.round(rect.width / 2);\n      rippleY = Math.round(rect.height / 2);\n    } else {\n      var clientX = event.clientX ? event.clientX : event.touches[0].clientX;\n      var clientY = event.clientY ? event.clientY : event.touches[0].clientY;\n      rippleX = Math.round(clientX - rect.left);\n      rippleY = Math.round(clientY - rect.top);\n    }\n\n    if (center) {\n      rippleSize = Math.sqrt((2 * Math.pow(rect.width, 2) + Math.pow(rect.height, 2)) / 3); // For some reason the animation is broken on Mobile Chrome if the size if even.\n\n      if (rippleSize % 2 === 0) {\n        rippleSize += 1;\n      }\n    } else {\n      var sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;\n      var sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;\n      rippleSize = Math.sqrt(Math.pow(sizeX, 2) + Math.pow(sizeY, 2));\n    } // Touche devices\n\n\n    if (event.touches) {\n      // check that this isn't another touchstart due to multitouch\n      // otherwise we will only clear a single timer when unmounting while two\n      // are running\n      if (startTimerCommit.current === null) {\n        // Prepare the ripple effect.\n        startTimerCommit.current = function () {\n          startCommit({\n            pulsate: pulsate,\n            rippleX: rippleX,\n            rippleY: rippleY,\n            rippleSize: rippleSize,\n            cb: cb\n          });\n        }; // Delay the execution of the ripple effect.\n\n\n        startTimer.current = setTimeout(function () {\n          if (startTimerCommit.current) {\n            startTimerCommit.current();\n            startTimerCommit.current = null;\n          }\n        }, DELAY_RIPPLE); // We have to make a tradeoff with this value.\n      }\n    } else {\n      startCommit({\n        pulsate: pulsate,\n        rippleX: rippleX,\n        rippleY: rippleY,\n        rippleSize: rippleSize,\n        cb: cb\n      });\n    }\n  }, [centerProp, startCommit]);\n  var pulsate = React.useCallback(function () {\n    start({}, {\n      pulsate: true\n    });\n  }, [start]);\n  var stop = React.useCallback(function (event, cb) {\n    clearTimeout(startTimer.current); // The touch interaction occurs too quickly.\n    // We still want to show ripple effect.\n\n    if (event.type === 'touchend' && startTimerCommit.current) {\n      event.persist();\n      startTimerCommit.current();\n      startTimerCommit.current = null;\n      startTimer.current = setTimeout(function () {\n        stop(event, cb);\n      });\n      return;\n    }\n\n    startTimerCommit.current = null;\n    setRipples(function (oldRipples) {\n      if (oldRipples.length > 0) {\n        return oldRipples.slice(1);\n      }\n\n      return oldRipples;\n    });\n    rippleCallback.current = cb;\n  }, []);\n  React.useImperativeHandle(ref, function () {\n    return {\n      pulsate: pulsate,\n      start: start,\n      stop: stop\n    };\n  }, [pulsate, start, stop]);\n  return (\n    /*#__PURE__*/\n    React.createElement(\"span\", _extends({\n      className: clsx(classes.root, className),\n      ref: container\n    }, other),\n    /*#__PURE__*/\n    React.createElement(TransitionGroup, {\n      component: null,\n      exit: true\n    }, ripples))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? TouchRipple.propTypes = {\n  /**\n   * If `true`, the ripple starts at the center of the component\n   * rather than at the point of interaction.\n   */\n  center: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiTouchRipple'\n})(React.memo(TouchRipple));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef, refType } from '@material-ui/utils';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport withStyles from '../styles/withStyles';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport TouchRipple from './TouchRipple';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    textDecoration: 'none',\n    // So we take precedent over the style of a native <a /> element.\n    color: 'inherit',\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$disabled': {\n      pointerEvents: 'none',\n      // Disable link interactions\n      cursor: 'default'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Pseudo-class applied to the root element if keyboard focused. */\n  focusVisible: {}\n};\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\n\nvar ButtonBase = React.forwardRef(function ButtonBase(props, ref) {\n  var action = props.action,\n      buttonRefProp = props.buttonRef,\n      _props$centerRipple = props.centerRipple,\n      centerRipple = _props$centerRipple === void 0 ? false : _props$centerRipple,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableRipple = props.disableRipple,\n      disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,\n      _props$disableTouchRi = props.disableTouchRipple,\n      disableTouchRipple = _props$disableTouchRi === void 0 ? false : _props$disableTouchRi,\n      _props$focusRipple = props.focusRipple,\n      focusRipple = _props$focusRipple === void 0 ? false : _props$focusRipple,\n      focusVisibleClassName = props.focusVisibleClassName,\n      onBlur = props.onBlur,\n      onClick = props.onClick,\n      onFocus = props.onFocus,\n      onFocusVisible = props.onFocusVisible,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      onMouseDown = props.onMouseDown,\n      onMouseLeave = props.onMouseLeave,\n      onMouseUp = props.onMouseUp,\n      onTouchEnd = props.onTouchEnd,\n      onTouchMove = props.onTouchMove,\n      onTouchStart = props.onTouchStart,\n      onDragLeave = props.onDragLeave,\n      _props$tabIndex = props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex,\n      TouchRippleProps = props.TouchRippleProps,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      other = _objectWithoutProperties(props, [\"action\", \"buttonRef\", \"centerRipple\", \"children\", \"classes\", \"className\", \"component\", \"disabled\", \"disableRipple\", \"disableTouchRipple\", \"focusRipple\", \"focusVisibleClassName\", \"onBlur\", \"onClick\", \"onFocus\", \"onFocusVisible\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseLeave\", \"onMouseUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"onDragLeave\", \"tabIndex\", \"TouchRippleProps\", \"type\"]);\n\n  var buttonRef = React.useRef(null);\n\n  function getButtonNode() {\n    // #StrictMode ready\n    return ReactDOM.findDOMNode(buttonRef.current);\n  }\n\n  var rippleRef = React.useRef(null);\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  React.useImperativeHandle(action, function () {\n    return {\n      focusVisible: function focusVisible() {\n        setFocusVisible(true);\n        buttonRef.current.focus();\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (focusVisible && focusRipple && !disableRipple) {\n      rippleRef.current.pulsate();\n    }\n  }, [disableRipple, focusRipple, focusVisible]);\n\n  function useRippleHandler(rippleAction, eventCallback) {\n    var skipRippleAction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : disableTouchRipple;\n    return useEventCallback(function (event) {\n      if (eventCallback) {\n        eventCallback(event);\n      }\n\n      var ignore = skipRippleAction;\n\n      if (!ignore && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n\n      return true;\n    });\n  }\n\n  var handleMouseDown = useRippleHandler('start', onMouseDown);\n  var handleDragLeave = useRippleHandler('stop', onDragLeave);\n  var handleMouseUp = useRippleHandler('stop', onMouseUp);\n  var handleMouseLeave = useRippleHandler('stop', function (event) {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n  });\n  var handleTouchStart = useRippleHandler('start', onTouchStart);\n  var handleTouchEnd = useRippleHandler('stop', onTouchEnd);\n  var handleTouchMove = useRippleHandler('stop', onTouchMove);\n  var handleBlur = useRippleHandler('stop', function (event) {\n    if (focusVisible) {\n      onBlurVisible(event);\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  }, false);\n  var handleFocus = useEventCallback(function (event) {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n\n      if (onFocusVisible) {\n        onFocusVisible(event);\n      }\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  });\n\n  var isNonNativeButton = function isNonNativeButton() {\n    var button = getButtonNode();\n    return component && component !== 'button' && !(button.tagName === 'A' && button.href);\n  };\n  /**\n   * IE 11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat\n   */\n\n\n  var keydownRef = React.useRef(false);\n  var handleKeyDown = useEventCallback(function (event) {\n    // Check if key is already down to avoid repeats being counted as multiple activations\n    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      event.persist();\n      rippleRef.current.stop(event, function () {\n        rippleRef.current.start(event);\n      });\n    }\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {\n      event.preventDefault();\n\n      if (onClick) {\n        onClick(event);\n      }\n    }\n  });\n  var handleKeyUp = useEventCallback(function (event) {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      event.persist();\n      rippleRef.current.stop(event, function () {\n        rippleRef.current.pulsate(event);\n      });\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {\n      onClick(event);\n    }\n  });\n  var ComponentProp = component;\n\n  if (ComponentProp === 'button' && other.href) {\n    ComponentProp = 'a';\n  }\n\n  var buttonProps = {};\n\n  if (ComponentProp === 'button') {\n    buttonProps.type = type;\n    buttonProps.disabled = disabled;\n  } else {\n    if (ComponentProp !== 'a' || !other.href) {\n      buttonProps.role = 'button';\n    }\n\n    buttonProps['aria-disabled'] = disabled;\n  }\n\n  var handleUserRef = useForkRef(buttonRefProp, ref);\n  var handleOwnRef = useForkRef(focusVisibleRef, buttonRef);\n  var handleRef = useForkRef(handleUserRef, handleOwnRef);\n\n  var _React$useState2 = React.useState(false),\n      mountedState = _React$useState2[0],\n      setMountedState = _React$useState2[1];\n\n  React.useEffect(function () {\n    setMountedState(true);\n  }, []);\n  var enableTouchRipple = mountedState && !disableRipple && !disabled;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (enableTouchRipple && !rippleRef.current) {\n        console.error(['Material-UI: the `component` prop provided to ButtonBase is invalid.', 'Please make sure the children prop is rendered in this custom component.'].join('\\n'));\n      }\n    }, [enableTouchRipple]);\n  }\n\n  return (\n    /*#__PURE__*/\n    React.createElement(ComponentProp, _extends({\n      className: clsx(classes.root, className, focusVisible && [classes.focusVisible, focusVisibleClassName], disabled && classes.disabled),\n      onBlur: handleBlur,\n      onClick: onClick,\n      onFocus: handleFocus,\n      onKeyDown: handleKeyDown,\n      onKeyUp: handleKeyUp,\n      onMouseDown: handleMouseDown,\n      onMouseLeave: handleMouseLeave,\n      onMouseUp: handleMouseUp,\n      onDragLeave: handleDragLeave,\n      onTouchEnd: handleTouchEnd,\n      onTouchMove: handleTouchMove,\n      onTouchStart: handleTouchStart,\n      ref: handleRef,\n      tabIndex: disabled ? -1 : tabIndex\n    }, buttonProps, other), children, enableTouchRipple ?\n    /*#__PURE__*/\n\n    /* TouchRipple is only needed client-side, x2 boost on the server. */\n    React.createElement(TouchRipple, _extends({\n      ref: rippleRef,\n      center: centerRipple\n    }, TouchRippleProps)) : null)\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonBase.propTypes = {\n  /**\n   * A ref for imperative actions.\n   * It currently only supports `focusVisible()` action.\n   */\n  action: refType,\n\n  /**\n   * @ignore\n   *\n   * Use that prop to pass a ref to the native button component.\n   * @deprecated Use `ref` instead.\n   */\n  buttonRef: refType,\n\n  /**\n   * If `true`, the ripples will be centered.\n   * They won't start at the cursor interaction position.\n   */\n  centerRipple: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * If `true`, the base button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the touch ripple effect will be disabled.\n   */\n  disableTouchRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the base button will have a keyboard focus ripple.\n   * `disableRipple` must also be `false`.\n   */\n  focusRipple: PropTypes.bool,\n\n  /**\n   * This prop can help a person know which element has the keyboard focus.\n   * The class name will be applied when the element gain the focus through a keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onDragLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchMove: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Props applied to the `TouchRipple` element.\n   */\n  TouchRippleProps: PropTypes.object,\n\n  /**\n   * Used to control the button's purpose.\n   * This prop passes the value to the `type` attribute of the native button component.\n   */\n  type: PropTypes.oneOf(['submit', 'reset', 'button'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButtonBase'\n})(ButtonBase);"],"sourceRoot":""}